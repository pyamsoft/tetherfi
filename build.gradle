/*
 * Copyright 2024 pyamsoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    // SDK
    minSdk = 24
    targetSdk = 34
    compileSdk = 34

    // Kotlin
    kotlin = "2.0.21"
    coroutines = "1.9.0"

    // Us
    pydroid = "27.0.6"

    // Leak Canary
    leakCanary = "2.14"

    // Dagger
    dagger = "2.52"

    // Compose
    compose = "1.7.4"
    composeMaterial3 = "1.3.0"
    composeActivity = "1.9.3"

    desugar = "2.1.2"

    ktor = "3.0.1-PYAMSOFT"

    // Testing
    testRunner = "1.6.2"
  }
}

plugins {
  // Android AGP
  // https://developer.android.com/studio/build#top-level
  id("com.android.library") version '8.7.2' apply false

  // Fix Android build cache
  // https://github.com/gradle/android-cache-fix-gradle-plugin
  id("org.gradle.android.cache-fix") version "3.0.1" apply false

  // Kotlin
  // https://developer.android.com/studio/build#top-level
  id("org.jetbrains.kotlin.android") version "${kotlin}" apply false

  // Jetpack Compose Compiler
  // https://android-developers.googleblog.com/2024/04/jetpack-compose-compiler-moving-to-kotlin-repository.html
  id("org.jetbrains.kotlin.plugin.compose") version "${kotlin}" apply false

  // Gradle version checker
  // https://github.com/ben-manes/gradle-versions-plugin
  id("com.github.ben-manes.versions") version "0.51.0" apply false

  // Version Filter Plugin
  // https://github.com/janderssonse/gradle-versions-filter-plugin
  id("se.ascp.gradle.gradle-versions-filter") version "0.1.16" apply false

  // Spotless
  // https://github.com/diffplug/spotless
  id("com.diffplug.spotless") version "6.25.0" apply false

  // KSP
  // https://github.com/google/ksp
  id("com.google.devtools.ksp") version "${kotlin}-1.0.26" apply false

  // Gradle Doctor
  // https://runningcode.github.io/gradle-doctor/
  id("com.osacky.doctor") version "0.10.0" apply true
}

allprojects {
  apply plugin: "com.diffplug.spotless"
  apply plugin: "com.github.ben-manes.versions"
  apply plugin: "se.ascp.gradle.gradle-versions-filter"

  // We don't care about enforcing JAVA_HOME checks
  doctor {
    javaHome {
      ensureJavaHomeMatches = false
      ensureJavaHomeIsSet = false
      failOnError = false
    }
  }

  repositories {
    mavenLocal()
    gradlePluginPortal()
    google()
    mavenCentral()

    // Jitpack
    maven {
      setUrl("https://jitpack.io")
      content {
        includeGroup("com.github.pyamsoft.pydroid")
        includeGroup("com.github.pyamsoft")
      }
    }
  }

  // Java compile show
  tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
      "-Xlint:unchecked",
      "-Xlint:deprecation"
    ]
    options.deprecation = true
  }

  // Spotless plugin
  spotless {
    java {
      target("src/**/*.java")

      removeUnusedImports()
      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
    kotlin {
      target("src/**/*.kt", "*.kts")
      ktfmt()

      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
    groovyGradle {
      target("*.gradle")
      greclipse()

      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
  }
}
